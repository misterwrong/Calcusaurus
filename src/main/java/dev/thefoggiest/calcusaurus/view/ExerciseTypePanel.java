/*
 * Copyright (C) 2019 Mister Wrong <hello@thefoggiest.dev>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package dev.thefoggiest.calcusaurus.view;

import java.awt.event.ActionListener;
import java.util.Arrays;
import javax.swing.JCheckBox;
import javax.swing.event.ChangeEvent;
import dev.thefoggiest.calcusaurus.service.ExerciseService;
import dev.thefoggiest.calcusaurus.service.ExerciseService.MaxNumber;
import dev.thefoggiest.calcusaurus.util.RequestFocusListener;

/**
 *
 * @author Mister Wrong <hello@thefoggiest.dev>
 */
public class ExerciseTypePanel extends javax.swing.JPanel
{
    /**
     * Creates new form ExerciseTypePanel
     *
     * @param ae
     */
    public ExerciseTypePanel(final ActionListener ae)
    {
        initComponents();
        amountSpinner.setValue(10);
        highestNumberComboBox.setSelectedIndex(0);
        readyButton.addActionListener(ae);
        
        negativeCheckBox.addChangeListener((ChangeEvent e) ->
        {
            JCheckBox checkbox = (JCheckBox)e.getSource();
            if (checkbox.isSelected()) {
                zeroCheckBox.setSelected(true);
            }
        });
        
        
        zeroCheckBox.addChangeListener((ChangeEvent e) ->
        {
            JCheckBox checkbox = (JCheckBox)e.getSource();
            if (!checkbox.isSelected()) {
                negativeCheckBox.setSelected(false);
            }
        });
        
        readyButton.addAncestorListener(new RequestFocusListener());
    }

    public int getAmount()
    {
        return (Integer) amountSpinner.getValue();
    }

    public MaxNumber getHighestNumber()
    {
        return Arrays
            .asList(MaxNumber.values())
            .get(highestNumberComboBox.getSelectedIndex());
    }

    public boolean doZero()
    {
        return zeroCheckBox.isSelected();
    }

    public boolean doNegative()
    {
        return negativeCheckBox.isSelected();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        amountSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        highestNumberComboBox = new javax.swing.JComboBox(ExerciseService.MaxNumber.values());
        zeroCheckBox = new javax.swing.JCheckBox();
        negativeCheckBox = new javax.swing.JCheckBox();
        readyButton = new javax.swing.JButton();

        jLabel1.setText("Hoeveel vragen wil je?");

        jLabel2.setText("Hoogste getal?");

        zeroCheckBox.setText("Nul (0)?");

        negativeCheckBox.setText("Getallen onder de nul?");

        readyButton.setText("Klaar!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(amountSpinner)
                            .addComponent(highestNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(zeroCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(readyButton)
                            .addComponent(negativeCheckBox))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(110, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(amountSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(highestNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(zeroCheckBox)
                    .addComponent(negativeCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(readyButton)
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner amountSpinner;
    private javax.swing.JComboBox<String> highestNumberComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JCheckBox negativeCheckBox;
    private javax.swing.JButton readyButton;
    private javax.swing.JCheckBox zeroCheckBox;
    // End of variables declaration//GEN-END:variables
}
